<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.cy.owner.mapper.role.SysRoleInfoMapper">
    <resultMap id="BaseResultMap" type="priv.cy.owner.entity.SysRoleInfo">
        <!--@mbg.generated-->
        <!--@Table sys_role_info-->
        <id column="role_id" jdbcType="VARCHAR" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="parent_id" jdbcType="VARCHAR" property="parentId"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="is_locked" jdbcType="BOOLEAN" property="isLocked"/>
        <result column="is_deleted" jdbcType="BOOLEAN" property="isDeleted"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        role_id, role_name, parent_id, description, is_locked, is_deleted, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from sys_role_info
        where role_id = #{roleId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--@mbg.generated-->
        delete from sys_role_info
        where role_id = #{roleId,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="priv.cy.owner.entity.SysRoleInfo">
        <!--@mbg.generated-->
        insert into sys_role_info (role_id, role_name, parent_id,
        description, is_locked, is_deleted,
        create_time, update_time)
        values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR}, #{isLocked,jdbcType=BOOLEAN}, #{isDeleted,jdbcType=BOOLEAN},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="priv.cy.owner.entity.SysRoleInfo">
        <!--@mbg.generated-->
        insert into sys_role_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="isLocked != null">
                is_locked,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="isLocked != null">
                #{isLocked,jdbcType=BOOLEAN},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=BOOLEAN},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="priv.cy.owner.entity.SysRoleInfo">
        <!--@mbg.generated-->
        update sys_role_info
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="isLocked != null">
                is_locked = #{isLocked,jdbcType=BOOLEAN},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=BOOLEAN},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="priv.cy.owner.entity.SysRoleInfo">
        <!--@mbg.generated-->
        update sys_role_info
        set role_name = #{roleName,jdbcType=VARCHAR},
        parent_id = #{parentId,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        is_locked = #{isLocked,jdbcType=BOOLEAN},
        is_deleted = #{isDeleted,jdbcType=BOOLEAN},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where role_id = #{roleId,jdbcType=VARCHAR}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update sys_role_info
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="role_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when role_id = #{item.roleId,jdbcType=VARCHAR} then #{item.roleName,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="parent_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when role_id = #{item.roleId,jdbcType=VARCHAR} then #{item.parentId,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="description = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when role_id = #{item.roleId,jdbcType=VARCHAR} then #{item.description,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="is_locked = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when role_id = #{item.roleId,jdbcType=VARCHAR} then #{item.isLocked,jdbcType=BOOLEAN}
                </foreach>
            </trim>
            <trim prefix="is_deleted = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when role_id = #{item.roleId,jdbcType=VARCHAR} then #{item.isDeleted,jdbcType=BOOLEAN}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when role_id = #{item.roleId,jdbcType=VARCHAR} then #{item.createTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when role_id = #{item.roleId,jdbcType=VARCHAR} then #{item.updateTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
        </trim>
        where role_id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.roleId,jdbcType=VARCHAR}
        </foreach>
    </update>
    <insert id="batchInsert" parameterType="map">
        <!--@mbg.generated-->
        insert into sys_role_info
        (role_id, role_name, parent_id, description, is_locked, is_deleted, create_time,
        update_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.roleId,jdbcType=VARCHAR}, #{item.roleName,jdbcType=VARCHAR}, #{item.parentId,jdbcType=VARCHAR},
            #{item.description,jdbcType=VARCHAR}, #{item.isLocked,jdbcType=BOOLEAN}, #{item.isDeleted,jdbcType=BOOLEAN},
            #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
</mapper>